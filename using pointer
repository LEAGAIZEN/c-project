# c-project
#include <stdio.h>
#include <stdlib.h>

struct person {
    int rollno;
    int Class;
    char name[20];
};

int main() {
    int n,i;
    printf("enter the total numbe rof student");
    scanf("%d",&n);
    
    struct person *hero[n];
    // hero[n]= (struct person*)malloc(sizeof(struct person));
for(i=0;i<n;i++){
     hero[i]= (struct person*)malloc(sizeof(struct person));
    printf("Enter class : ");
    scanf("%d", &(hero[i]->Class));

    printf("Enter name: ");
    scanf("%s", hero[i]->name);

    printf("Enter roll no: ");
    scanf("%d", &(hero[i]->rollno));}
    for ( i = 0; i < n; i++) {
        free(hero[i]);
    }
    return 0;
}
  #include<stdio.h>
    #include<stdlib.h>
    struct data{
        int roll;
        int sub1,sub2,sub3;
        char name[20];
    };
    int main(){
        int n;
        printf("ENTER THE NUMBER OF STUDENT");
        scanf("%d",&n);
        struct data *p[n];
        // p[i]=(struct data*)malloc(sizeof(struct data));
        for(int i=0;i<n;i++){
            p[i]=(struct data*)malloc(sizeof(struct data));
            printf("ENTER THE NAMER OF STUDENT;");
        scanf("%s",p[i]->name);
        printf("ENTER THE ROLL NO;");
        scanf("%d",&(p[i]->roll));
              printf("ENTER THE MARKS FOR FIRST SUBJECT;");
        scanf("%d",&(p[i]->sub1));
          printf("ENTER THE MARKS FOR SECOND SUBJECT;");
        scanf("%d",&(p[i]->sub2));
          printf("ENTER THE MARKS FOR THIRD SUBJECT;");
        scanf("%d",&(p[i]->sub3));
        int avg=(p[i]->sub1+p[i]->sub2+p[i]->sub3)/3;
        printf("%d\n",avg);
        if(avg<50){
            printf("you failed\n");
        }else if(avg>50 &&avg<=60){
            printf("you got second division\n");
        }else if(avg>60 && avg<=70){
            printf("you got first division\n");
        }else{
            printf("you got distinction\n");
        }
        
        }
        for(int i=0;i<n;i++){
            free(p[i]);
        }
    }
// Online C compiler to run C program online
#include <stdio.h>
#include<stdlib.h>

int main() {
   int i,j,**mat1,**mat2,r,c,r1,c1;
   printf("enter the number of rows and columns for mat 1;");
   scanf("%d %d",&r,&c);
     printf("enter the number of rows and columns for mat 2;");
   scanf("%d %d",&r1,&c1);
   if(r!=r1||c!=c1){
       printf("write equal rows and columns");
   }
   mat1=(int**)malloc(r*sizeof(int));
   for(i=0;i<r;i++){
       mat1[i]=(int*)malloc(c*sizeof(int));
   }
   mat2=(int**)malloc(r1*sizeof(int));
   for(i=0;i<r1;i++){
       mat2[i]=(int*)malloc(c1*sizeof(int));
   }
     printf("enter the elements for mat1\n");
   for (i=0;i<r;i++){
       for(j=0;j<c;j++){
         
           scanf("%d",&mat1[i][j]);
       }
   }
    printf("enter the elements for mat2\n");
    for (i=0;i<r1;i++){
       for(j=0;j<c1;j++){
          
           scanf("%d",&mat2[i][j]);
       }
   }
   int **mul = (int**)malloc(r * sizeof(int*));
    for (i = 0; i < r; i++) {
        mul[i] = (int*)calloc(c1, sizeof(int));
    }

    for (i=0;i<r;i++){
       for(j=0;j<c1;j++){
           for(int k=0;k<c;k++){
        //   printf("enter the elements for mat2");
        mul[i][j]+=mat1[i][k]*mat2[k][j];
        //   scanf("%d",&mat[i][j]);
        printf("\n");
       }
   }
    }
     printf("enter the elements for after multiplication\n");
    for (i=0;i<r1;i++){
       for(j=0;j<c1;j++){
        //   printf("enter the elements for after multiplication");
           printf("%d ", mul[i][j]);
          
       }
        printf("\n");
   }
    
    return 0;
}
// linked sist especially singl;er linked lsit
// Online C compiler to run C program online
#include <stdio.h>
#include<string.h>
#include<stdlib.h>
struct node{
    int a;
    char b[100];
    struct node *het;
};
void countof(struct node*head){
    int count=0;
    if(head==NULL)
    printf("linked list is empty\n");
     struct node *ptr = head; 
    ptr=head;
    while(ptr!=NULL){
        count++;
        ptr=ptr->het;
    }
    printf("total count is %d\n",count);
}


int main() {
   
    struct node *head=NULL;
    head=( struct node*)malloc(sizeof(struct node));
    head->a=45;
    // head->b="hero";
    strcpy(head->b, "hero");
    head->het=NULL;
    printf("%d",head->a);
     printf("%s\n",head->b);
      struct node *current =NULL;
    current=( struct current*)malloc(sizeof(struct node));
    head->het=current;
    current->a=12;
      printf("%d\n",current->a);
    // Write C code here
    // printf("Hello world");
     countof(head);

    return 0;
}
